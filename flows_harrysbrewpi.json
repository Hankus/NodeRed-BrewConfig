[
    {
        "id": "b209822d.9e674",
        "type": "tab",
        "label": "Bootup tasks",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c70403e1.fef6",
        "type": "tab",
        "label": "Telegram",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4c0008aa.866518",
        "type": "tab",
        "label": "Heatbeat",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fd1f2b7f.0d4d08",
        "type": "tab",
        "label": "PT100 Sensors",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a0771295.bec48",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "db2290bc.6bd9c8",
        "type": "tab",
        "label": "GPIO test",
        "disabled": false,
        "info": ""
    },
    {
        "id": "72bd38cd.b8a178",
        "type": "tab",
        "label": "Element view controller",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4c2748b.984d3b8",
        "type": "tab",
        "label": "Element controllers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b6bdc7e8.c2bbe8",
        "type": "tab",
        "label": "Element Output Controllers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bed2c066.9e4d4",
        "type": "subflow",
        "name": "Double chirp buzzer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "5f1ad99e.733a18"
                    },
                    {
                        "id": "2db072c7.23309e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "b4973237.46ab6",
        "type": "subflow",
        "name": "Process Simulation",
        "info": "",
        "in": [
            {
                "x": 37,
                "y": 103,
                "wires": [
                    {
                        "id": "ec719d4d.0d54f8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 728.5,
                "y": 294,
                "wires": [
                    {
                        "id": "ae1a6e5.d4c0d9",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "3c99e478.ab352c",
        "type": "group",
        "z": "c70403e1.fef6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b9177371.4ece68",
            "ae4f77c8.74204",
            "ca9bca9a.5e9c3",
            "def72da8.aa8c6",
            "24d98b2.b6993f4"
        ],
        "x": 54,
        "y": 979,
        "w": 1112,
        "h": 149.5
    },
    {
        "id": "8999c1e2.ee75b",
        "type": "group",
        "z": "c70403e1.fef6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e5a97be2.5b8958",
            "da0bd6e0.596e88",
            "317f98f6.700b1",
            "68efbb04.cab494"
        ],
        "x": 54,
        "y": 199,
        "w": 632,
        "h": 142
    },
    {
        "id": "5d240556.262b84",
        "type": "group",
        "z": "c70403e1.fef6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f8cf3b90.295fb8",
            "beafa108.ff0d",
            "29f89bd1.4d1bd4",
            "854cf920.80e668"
        ],
        "x": 54,
        "y": 39,
        "w": 592,
        "h": 142
    },
    {
        "id": "fa9d12fd.befec8",
        "type": "group",
        "z": "c70403e1.fef6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c43dff8b.85166",
            "6d8fd408.9585fc",
            "c0ac7d62.1e39d",
            "9f1aa022.d91c28",
            "e4595fa3.a4388",
            "ca31e383.6e78c8",
            "bcf40f19.5dc808",
            "ad8cd822.dff9f8",
            "340c7452.cde394",
            "19e89484.507533"
        ],
        "x": 54,
        "y": 719,
        "w": 1512,
        "h": 229.5
    },
    {
        "id": "72b7ae42.0b82d",
        "type": "group",
        "z": "c70403e1.fef6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "65e4a33f.7768ac",
            "d3d5ceab.85a72",
            "40a24888.9072a8",
            "9711b5d7.3215d",
            "3738d33c.cb5054",
            "463077fd.6a2e7"
        ],
        "x": 54,
        "y": 359,
        "w": 892,
        "h": 182
    },
    {
        "id": "d90db005.43c49",
        "type": "group",
        "z": "c70403e1.fef6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "96a43a70.4e70d8",
            "b3ce35b8.9039d",
            "7eac2e98.f92a1",
            "c84aa19c.8a36f8",
            "2ac76708.01729"
        ],
        "x": 54,
        "y": 559,
        "w": 1052,
        "h": 142
    },
    {
        "id": "1fe8870c.af7949",
        "type": "group",
        "z": "b209822d.9e674",
        "name": "Start the dashboard on the HDMI output when booted up",
        "style": {
            "label": true
        },
        "nodes": [
            "40ee18a5.154a38",
            "2f984eaf.bf7712"
        ],
        "x": 74,
        "y": 51.5,
        "w": 612,
        "h": 97
    },
    {
        "id": "a0955a5d.7bc6a",
        "type": "group",
        "z": "c70403e1.fef6",
        "name": "Answer Shut down command ________________________________",
        "style": {
            "label": true
        },
        "nodes": [
            "31bd66ed.17842a",
            "f54140e1.6a4f08",
            "394a954a.72c522",
            "c26484e4.d1d038",
            "b6ab5272.dd7888",
            "1f9ff3d8.063844",
            "de015364.e3aed8"
        ],
        "x": 54,
        "y": 1139,
        "w": 1192,
        "h": 142
    },
    {
        "id": "5cc5dd43.7d4754",
        "type": "group",
        "z": "c70403e1.fef6",
        "name": "Answer Reboot command ________________________________",
        "style": {
            "label": true
        },
        "nodes": [
            "d4f27a55.c406c",
            "d9654041.bdf358",
            "db41b550.37f718",
            "e1cb8594.2fc86",
            "31ffddb.b0b58a2",
            "677a907f.940e9",
            "1bc8a1d6.3b8d3e"
        ],
        "x": 54,
        "y": 1299,
        "w": 1152,
        "h": 142
    },
    {
        "id": "a5478298.6399d",
        "type": "group",
        "z": "b209822d.9e674",
        "name": "Tell everyone we are online",
        "style": {
            "label": true
        },
        "nodes": [
            "eee739a7.6a5b58",
            "7d12a340.e6368c",
            "18279eff.a00049",
            "efbf535f.199948",
            "e2316670.0a0af",
            "ab115648.2f2c6"
        ],
        "x": 74,
        "y": 191.5,
        "w": 1452,
        "h": 97
    },
    {
        "id": "3b1baa9.ceb9956",
        "type": "group",
        "z": "db2290bc.6bd9c8",
        "name": "Pump Control",
        "style": {
            "label": true
        },
        "nodes": [
            "33ada14c.ad7b3e",
            "87ee17a5.c48eb8",
            "61547faa.cdd2",
            "13150dfd.eebf72"
        ],
        "x": 94,
        "y": 279,
        "w": 512,
        "h": 162
    },
    {
        "id": "3f74176e.8009c8",
        "type": "group",
        "z": "db2290bc.6bd9c8",
        "name": "Buzzer",
        "style": {
            "label": true
        },
        "nodes": [
            "4f4a658a.6b4aac",
            "6b95fe22.614ae",
            "2c0ddb20.797604"
        ],
        "x": 84,
        "y": 139,
        "w": 482,
        "h": 122
    },
    {
        "id": "a9ab64c9.53007",
        "type": "ui_tab",
        "name": "Landing",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "c0391f6c.552ff",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ee877576.e7497",
        "type": "ui_group",
        "name": "Controls",
        "tab": "3f73ea82.bc62e6",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a0af63cb.cfd18",
        "type": "telegrambot-config",
        "botname": "HarrysBrewBot",
        "usernames": "",
        "chatIds": "",
        "pollInterval": "1000"
    },
    {
        "id": "3f73ea82.bc62e6",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "599c9f6f.d3c42",
        "type": "ui_group",
        "name": "Charts",
        "tab": "3f73ea82.bc62e6",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": true
    },
    {
        "id": "c45a83a3.d00908",
        "type": "ui_group",
        "name": "PID",
        "tab": "80cd4062.93a5",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "80cd4062.93a5",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "40ee18a5.154a38",
        "type": "inject",
        "z": "b209822d.9e674",
        "g": "1fe8870c.af7949",
        "name": "Trigger Once At Startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 100,
        "wires": [
            [
                "2f984eaf.bf7712"
            ]
        ]
    },
    {
        "id": "2f984eaf.bf7712",
        "type": "exec",
        "z": "b209822d.9e674",
        "g": "1fe8870c.af7949",
        "command": "bash startChromium.sh",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Start Chromium If It Is Not Running",
        "x": 520,
        "y": 100,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9f1aa022.d91c28",
        "type": "telegrambot-command",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "name": "/open_tunnel",
        "bot": "a0af63cb.cfd18",
        "command": "\\/*open_tunnel",
        "commandType": "re",
        "commandCase": true,
        "x": 190,
        "y": 820,
        "wires": [
            [
                "6d8fd408.9585fc"
            ]
        ]
    },
    {
        "id": "f8cf3b90.295fb8",
        "type": "telegrambot-command",
        "z": "c70403e1.fef6",
        "g": "5d240556.262b84",
        "name": "/help",
        "bot": "a0af63cb.cfd18",
        "command": "\\/*help",
        "commandType": "re",
        "commandCase": false,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "854cf920.80e668"
            ]
        ]
    },
    {
        "id": "beafa108.ff0d",
        "type": "telegrambot-notify",
        "z": "c70403e1.fef6",
        "g": "5d240556.262b84",
        "name": "Tell User what bot can do",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 510,
        "y": 140,
        "wires": []
    },
    {
        "id": "bcf40f19.5dc808",
        "type": "debug",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 840,
        "wires": []
    },
    {
        "id": "29f89bd1.4d1bd4",
        "type": "comment",
        "z": "c70403e1.fef6",
        "g": "5d240556.262b84",
        "name": "Answer Help command ________________________________",
        "info": "",
        "x": 300,
        "y": 80,
        "wires": []
    },
    {
        "id": "e5a97be2.5b8958",
        "type": "comment",
        "z": "c70403e1.fef6",
        "g": "8999c1e2.ee75b",
        "name": "Answer Start command ________________________________",
        "info": "",
        "x": 300,
        "y": 240,
        "wires": []
    },
    {
        "id": "da0bd6e0.596e88",
        "type": "telegrambot-notify",
        "z": "c70403e1.fef6",
        "g": "8999c1e2.ee75b",
        "name": "Tell User what bot can do",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "317f98f6.700b1",
        "type": "telegrambot-command",
        "z": "c70403e1.fef6",
        "g": "8999c1e2.ee75b",
        "name": "/start",
        "bot": "a0af63cb.cfd18",
        "command": "\\/*start",
        "commandType": "re",
        "commandCase": false,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "68efbb04.cab494"
            ]
        ]
    },
    {
        "id": "68efbb04.cab494",
        "type": "template",
        "z": "c70403e1.fef6",
        "g": "8999c1e2.ee75b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Hey! Im Harrys brew bot! I can help you by running commands when you are away from home. I can also give you updates on how things are going.\n\nHave fun! 👍\n\nAsk for /help to see what I can do.",
        "output": "str",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "da0bd6e0.596e88"
            ]
        ]
    },
    {
        "id": "854cf920.80e668",
        "type": "template",
        "z": "c70403e1.fef6",
        "g": "5d240556.262b84",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "/start - Start conversation with me\n/help - Ask me what I can do\n/warm_up - Ill warm up the water for you while you’re away\n/stop - Emergency stop. will stop all outputs to pumps and heaters\n/open_tunnel - Start ssh tunnel for remote access to node red when away from the home\n/close_all_tunnels - Stop all tunnel connections\n/shut_down - Shut me down so you can properly remove power\n/reboot - Reboot me if something isnt working right",
        "output": "str",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "beafa108.ff0d"
            ]
        ]
    },
    {
        "id": "19e89484.507533",
        "type": "comment",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "name": "Answer Open Tunnel command ________________________________",
        "info": "",
        "x": 320,
        "y": 760,
        "wires": []
    },
    {
        "id": "6d8fd408.9585fc",
        "type": "function",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "name": "Check if msg has parameters",
        "func": "var requestParameters = null;\nvar parametersExist = null;\n\n// split the msg parts\nvar msgParts = msg.payload.split(\" \");\n\n// check how many parts there are\nif (msgParts.length > 1) {\n    // there is more than one. Send the first one it found\n    parametersExist = {payload: msgParts[1], telegram: msg.telegram};\n} else {\n    // there was no parameter\n    // Ask user for more information\n    requestParameters = {payload: true, telegram: msg.telegram};\n}\n\nreturn [requestParameters, parametersExist]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 820,
        "wires": [
            [
                "e4595fa3.a4388"
            ],
            [
                "c43dff8b.85166"
            ]
        ]
    },
    {
        "id": "e4595fa3.a4388",
        "type": "template",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "name": "No parameters",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "What IP should I connect to? Please tell me by running the command again, with the IP as the next word\neg: /open_tunnel 1.2.3.4",
        "output": "str",
        "x": 700,
        "y": 820,
        "wires": [
            [
                "ad8cd822.dff9f8"
            ]
        ]
    },
    {
        "id": "ad8cd822.dff9f8",
        "type": "telegrambot-notify",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "name": "Ask the user to provide an IP address",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 990,
        "y": 820,
        "wires": []
    },
    {
        "id": "c43dff8b.85166",
        "type": "function",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "name": "Create tunnel command",
        "func": "var ip = msg.payload\n\nif (!(/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip))) {\n    // thats not a valid IP\n    return;\n}\n\nmsg.destinationIp = ip;\n// msg.payload = \"bash startTunnel.sh\";\nmsg.payload = \"ssh -f -N -T -o StrictHostKeyChecking=no -i ~/.ssh/harrys-brew-bot-aws-key.pem -R 18800:localhost:1880 ec2-user@\" + ip\n// msg.payload = \"ssh -N -T -o StrictHostKeyChecking=no -i ~/.ssh/harrys-brew-bot-aws-key.pem -R 18800:localhost:1880 ec2-user@\" + ip\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 900,
        "wires": [
            [
                "c0ac7d62.1e39d"
            ]
        ]
    },
    {
        "id": "c0ac7d62.1e39d",
        "type": "exec",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "10",
        "oldrc": false,
        "name": "Start SSH",
        "x": 960,
        "y": 900,
        "wires": [
            [
                "ca31e383.6e78c8",
                "bcf40f19.5dc808"
            ],
            [
                "bcf40f19.5dc808",
                "ca31e383.6e78c8"
            ],
            [
                "bcf40f19.5dc808",
                "ca31e383.6e78c8"
            ]
        ]
    },
    {
        "id": "b9177371.4ece68",
        "type": "exec",
        "z": "c70403e1.fef6",
        "g": "3c99e478.ab352c",
        "command": "ps -lef|grep ssh|awk '{print $4}'|xargs kill",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Kill SSH",
        "x": 460,
        "y": 1080,
        "wires": [
            [
                "ca9bca9a.5e9c3"
            ],
            [],
            []
        ]
    },
    {
        "id": "ca31e383.6e78c8",
        "type": "function",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "name": "Set feedback message",
        "func": "var feedback = \"\";\n\nif(msg.payload && msg.payload.code && msg.payload.code == 0) {\n    feedback = \"SSH tunnel is ready for use. Run \\r\\n\" + \"ssh -i harrys-brew-bot-aws-key.pem -T -N -L 18801:localhost:18800 -v ec2-user@\" + msg.destinationIp + \"\\r\\nTo connect.\"\n} else if(msg.payload && msg.payload.signal && msg.payload.signal == \"SIGTERM\") {\n    feedback = \"Something went wrong. possibly a timeout. Is the IP address correct?\"\n} else {\n    feedback = msg.payload;\n}\n\nmsg.payload = \"SSH tunnel attempted. Details: \\r\\n\" + feedback\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 900,
        "wires": [
            [
                "340c7452.cde394",
                "bcf40f19.5dc808"
            ]
        ]
    },
    {
        "id": "ca9bca9a.5e9c3",
        "type": "function",
        "z": "c70403e1.fef6",
        "g": "3c99e478.ab352c",
        "name": "Set feedback message",
        "func": "msg.payload = \"The SSH connections have been terminated. Details: \" + msg.rc.message\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 1080,
        "wires": [
            [
                "def72da8.aa8c6"
            ]
        ]
    },
    {
        "id": "340c7452.cde394",
        "type": "telegrambot-notify",
        "z": "c70403e1.fef6",
        "g": "fa9d12fd.befec8",
        "name": "Tell user tunnel is ready",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 1430,
        "y": 900,
        "wires": []
    },
    {
        "id": "24d98b2.b6993f4",
        "type": "comment",
        "z": "c70403e1.fef6",
        "g": "3c99e478.ab352c",
        "name": "Answer Close all tunnels command ________________________________",
        "info": "",
        "x": 330,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ae4f77c8.74204",
        "type": "telegrambot-command",
        "z": "c70403e1.fef6",
        "g": "3c99e478.ab352c",
        "name": "/close_all_tunnels",
        "bot": "a0af63cb.cfd18",
        "command": "\\/*close_all_tunnels",
        "commandType": "re",
        "commandCase": false,
        "x": 210,
        "y": 1080,
        "wires": [
            [
                "b9177371.4ece68"
            ]
        ]
    },
    {
        "id": "def72da8.aa8c6",
        "type": "telegrambot-notify",
        "z": "c70403e1.fef6",
        "g": "3c99e478.ab352c",
        "name": "Tell user tunnels are closed",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 1020,
        "y": 1080,
        "wires": []
    },
    {
        "id": "65e4a33f.7768ac",
        "type": "comment",
        "z": "c70403e1.fef6",
        "g": "72b7ae42.0b82d",
        "name": "Answer Stop command ________________________________",
        "info": "",
        "x": 300,
        "y": 400,
        "wires": []
    },
    {
        "id": "d3d5ceab.85a72",
        "type": "telegrambot-notify",
        "z": "c70403e1.fef6",
        "g": "72b7ae42.0b82d",
        "name": "Tell user we have stopped output",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 580,
        "y": 460,
        "wires": []
    },
    {
        "id": "40a24888.9072a8",
        "type": "telegrambot-command",
        "z": "c70403e1.fef6",
        "g": "72b7ae42.0b82d",
        "name": "/stop",
        "bot": "a0af63cb.cfd18",
        "command": "\\/*stop",
        "commandType": "re",
        "commandCase": false,
        "x": 150,
        "y": 460,
        "wires": [
            [
                "9711b5d7.3215d",
                "3738d33c.cb5054"
            ]
        ]
    },
    {
        "id": "9711b5d7.3215d",
        "type": "template",
        "z": "c70403e1.fef6",
        "g": "72b7ae42.0b82d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Outputs have been stopped. 🛑\n\nTo reset the outputs, do it at the brew dashboard.\n\nHope everything is ok!",
        "output": "str",
        "x": 320,
        "y": 460,
        "wires": [
            [
                "d3d5ceab.85a72"
            ]
        ]
    },
    {
        "id": "3738d33c.cb5054",
        "type": "link out",
        "z": "c70403e1.fef6",
        "g": "72b7ae42.0b82d",
        "name": "Emergency stop - Disable outputs",
        "links": [],
        "x": 380,
        "y": 500,
        "wires": [],
        "l": true
    },
    {
        "id": "96a43a70.4e70d8",
        "type": "comment",
        "z": "c70403e1.fef6",
        "g": "d90db005.43c49",
        "name": "Answer Warm up command ________________________________",
        "info": "",
        "x": 310,
        "y": 600,
        "wires": []
    },
    {
        "id": "b3ce35b8.9039d",
        "type": "telegrambot-notify",
        "z": "c70403e1.fef6",
        "g": "d90db005.43c49",
        "name": "Tell user we have stopped output",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 580,
        "y": 660,
        "wires": []
    },
    {
        "id": "7eac2e98.f92a1",
        "type": "telegrambot-command",
        "z": "c70403e1.fef6",
        "g": "d90db005.43c49",
        "name": "/warm_up",
        "bot": "a0af63cb.cfd18",
        "command": "\\/*warm_up",
        "commandType": "re",
        "commandCase": false,
        "x": 160,
        "y": 660,
        "wires": [
            [
                "c84aa19c.8a36f8"
            ]
        ]
    },
    {
        "id": "c84aa19c.8a36f8",
        "type": "template",
        "z": "c70403e1.fef6",
        "g": "d90db005.43c49",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "No worries. Im warming the water up for you now. 👍\n\nIf you want an update on the tempurature, just ask for a /water_temperature_status\n\n-- By the way. This doesnt actually do anyhting. Make sure you fix this once you wire it all up!",
        "output": "str",
        "x": 320,
        "y": 660,
        "wires": [
            [
                "b3ce35b8.9039d"
            ]
        ]
    },
    {
        "id": "2ac76708.01729",
        "type": "comment",
        "z": "c70403e1.fef6",
        "g": "d90db005.43c49",
        "name": "TO DO: Actually start the warm program",
        "info": "",
        "x": 920,
        "y": 600,
        "wires": []
    },
    {
        "id": "31bd66ed.17842a",
        "type": "telegrambot-notify",
        "z": "c70403e1.fef6",
        "g": "a0955a5d.7bc6a",
        "name": "Tell user we are shutting down",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 1090,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f54140e1.6a4f08",
        "type": "telegrambot-command",
        "z": "c70403e1.fef6",
        "g": "a0955a5d.7bc6a",
        "name": "/shut_down",
        "bot": "a0af63cb.cfd18",
        "command": "\\/*shut_down",
        "commandType": "re",
        "commandCase": false,
        "x": 150,
        "y": 1200,
        "wires": [
            [
                "b6ab5272.dd7888"
            ]
        ]
    },
    {
        "id": "394a954a.72c522",
        "type": "template",
        "z": "c70403e1.fef6",
        "g": "a0955a5d.7bc6a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Bye bye! Shutting the Pi down now.\n\nPower it back up if you want me to be able to talk again!",
        "output": "str",
        "x": 860,
        "y": 1180,
        "wires": [
            [
                "31bd66ed.17842a"
            ]
        ]
    },
    {
        "id": "463077fd.6a2e7",
        "type": "comment",
        "z": "c70403e1.fef6",
        "g": "72b7ae42.0b82d",
        "name": "TO DO: Actually enable the emergency stop",
        "info": "",
        "x": 750,
        "y": 400,
        "wires": []
    },
    {
        "id": "c26484e4.d1d038",
        "type": "delay",
        "z": "c70403e1.fef6",
        "g": "a0955a5d.7bc6a",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 860,
        "y": 1240,
        "wires": [
            [
                "de015364.e3aed8"
            ]
        ]
    },
    {
        "id": "b6ab5272.dd7888",
        "type": "telegrambot-switch",
        "z": "c70403e1.fef6",
        "g": "a0955a5d.7bc6a",
        "name": "Confirm shutdown",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "question": "Are you sure you want to shut the Pi down?",
        "answers": [
            "Yes",
            "Cancel - dont shut down"
        ],
        "outputs": 3,
        "autoAnswerCallback": true,
        "timeoutValue": "20",
        "timeoutUnits": "s",
        "x": 350,
        "y": 1200,
        "wires": [
            [
                "1f9ff3d8.063844"
            ],
            [],
            []
        ]
    },
    {
        "id": "1f9ff3d8.063844",
        "type": "telegrambot-switch",
        "z": "c70403e1.fef6",
        "g": "a0955a5d.7bc6a",
        "name": "Double Confirm shutdown",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "question": "Are you really really sure you want to shut the Pi down?",
        "answers": [
            "Yes Im really sure!! Shut down",
            "Cancel - dont shut down"
        ],
        "outputs": 3,
        "autoAnswerCallback": true,
        "timeoutValue": "20",
        "timeoutUnits": "s",
        "x": 600,
        "y": 1200,
        "wires": [
            [
                "394a954a.72c522",
                "c26484e4.d1d038"
            ],
            [],
            []
        ]
    },
    {
        "id": "de015364.e3aed8",
        "type": "shutdown",
        "z": "c70403e1.fef6",
        "g": "a0955a5d.7bc6a",
        "name": "",
        "x": 1070,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d4f27a55.c406c",
        "type": "telegrambot-notify",
        "z": "c70403e1.fef6",
        "g": "5cc5dd43.7d4754",
        "name": "Tell user we are rebooting",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 1070,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d9654041.bdf358",
        "type": "telegrambot-command",
        "z": "c70403e1.fef6",
        "g": "5cc5dd43.7d4754",
        "name": "/reboot",
        "bot": "a0af63cb.cfd18",
        "command": "\\/*reboot",
        "commandType": "re",
        "commandCase": false,
        "x": 130,
        "y": 1360,
        "wires": [
            [
                "31ffddb.b0b58a2"
            ]
        ]
    },
    {
        "id": "db41b550.37f718",
        "type": "template",
        "z": "c70403e1.fef6",
        "g": "5cc5dd43.7d4754",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Bye bye! Rebooting the Pi now.\n\nI should be back in a few minutes!",
        "output": "str",
        "x": 860,
        "y": 1340,
        "wires": [
            [
                "d4f27a55.c406c"
            ]
        ]
    },
    {
        "id": "e1cb8594.2fc86",
        "type": "delay",
        "z": "c70403e1.fef6",
        "g": "5cc5dd43.7d4754",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 860,
        "y": 1400,
        "wires": [
            [
                "1bc8a1d6.3b8d3e"
            ]
        ]
    },
    {
        "id": "31ffddb.b0b58a2",
        "type": "telegrambot-switch",
        "z": "c70403e1.fef6",
        "g": "5cc5dd43.7d4754",
        "name": "Confirm reboot",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "question": "Are you sure you want to reboot the Pi?",
        "answers": [
            "Yes",
            "Cancel - dont reboot"
        ],
        "outputs": 3,
        "autoAnswerCallback": true,
        "timeoutValue": "20",
        "timeoutUnits": "s",
        "x": 340,
        "y": 1360,
        "wires": [
            [
                "677a907f.940e9"
            ],
            [],
            []
        ]
    },
    {
        "id": "677a907f.940e9",
        "type": "telegrambot-switch",
        "z": "c70403e1.fef6",
        "g": "5cc5dd43.7d4754",
        "name": "Double Confirm reboot",
        "bot": "a0af63cb.cfd18",
        "chatId": "",
        "question": "Are you really really sure you want to reboot the Pi?",
        "answers": [
            "Yes Im really sure!! Reboot",
            "Cancel - dont reboot"
        ],
        "outputs": 3,
        "autoAnswerCallback": true,
        "timeoutValue": "20",
        "timeoutUnits": "s",
        "x": 580,
        "y": 1360,
        "wires": [
            [
                "db41b550.37f718",
                "e1cb8594.2fc86"
            ],
            [],
            []
        ]
    },
    {
        "id": "1bc8a1d6.3b8d3e",
        "type": "restart",
        "z": "c70403e1.fef6",
        "g": "5cc5dd43.7d4754",
        "name": "",
        "x": 1040,
        "y": 1400,
        "wires": []
    },
    {
        "id": "eee739a7.6a5b58",
        "type": "telegrambot-notify",
        "z": "b209822d.9e674",
        "g": "a5478298.6399d",
        "name": "Tell User we are online",
        "bot": "a0af63cb.cfd18",
        "chatId": "-486488441",
        "message": "",
        "parseMode": "",
        "x": 1400,
        "y": 240,
        "wires": []
    },
    {
        "id": "7d12a340.e6368c",
        "type": "inject",
        "z": "b209822d.9e674",
        "g": "a5478298.6399d",
        "name": "Trigger Once At Startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "18279eff.a00049"
            ]
        ]
    },
    {
        "id": "18279eff.a00049",
        "type": "function",
        "z": "b209822d.9e674",
        "g": "a5478298.6399d",
        "name": "Check if this is the first bootup",
        "func": "if(flow.get(\"initialised\") === undefined) {\n\n    // store that this has been initialised\n    flow.set(\"initialised\", true);\n    \n    return msg;\n}\n// return null if we have alreay initialised\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "efbf535f.199948"
            ]
        ]
    },
    {
        "id": "efbf535f.199948",
        "type": "exec",
        "z": "b209822d.9e674",
        "g": "a5478298.6399d",
        "command": "hostname -I",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Get the IP address",
        "x": 790,
        "y": 240,
        "wires": [
            [
                "ab115648.2f2c6"
            ],
            [],
            []
        ]
    },
    {
        "id": "e2316670.0a0af",
        "type": "template",
        "z": "b209822d.9e674",
        "g": "a5478298.6399d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Hi! Im back online now.\n\nYou can find me at either of these addresses (you need to be on the same wifi as me):\nhttp://harrysbrewpi.local:1880/\nhttp://{{payload}}:1880/\n\nDashboard:\nhttp://harrysbrewpi.local:1880/ui\nhttp://{{payload}}:1880/ui\n\nFeel free to ask for /help",
        "output": "str",
        "x": 1200,
        "y": 240,
        "wires": [
            [
                "eee739a7.6a5b58"
            ]
        ]
    },
    {
        "id": "ab115648.2f2c6",
        "type": "function",
        "z": "b209822d.9e674",
        "g": "a5478298.6399d",
        "name": "Remove line break",
        "func": "msg.payload = msg.payload.trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "e2316670.0a0af"
            ]
        ]
    },
    {
        "id": "89c202f7.bc993",
        "type": "inject",
        "z": "db2290bc.6bd9c8",
        "name": "LED On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "41f38206.1473ac"
            ]
        ]
    },
    {
        "id": "41f38206.1473ac",
        "type": "rpi-gpio out",
        "z": "db2290bc.6bd9c8",
        "name": "Red LED",
        "pin": "13",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "x": 390,
        "y": 100,
        "wires": []
    },
    {
        "id": "b93b0cbb.2e4618",
        "type": "inject",
        "z": "db2290bc.6bd9c8",
        "name": "LED Off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "41f38206.1473ac"
            ]
        ]
    },
    {
        "id": "33ada14c.ad7b3e",
        "type": "inject",
        "z": "db2290bc.6bd9c8",
        "g": "3b1baa9.ceb9956",
        "name": "Pump On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 200,
        "y": 360,
        "wires": [
            [
                "13150dfd.eebf72"
            ]
        ]
    },
    {
        "id": "87ee17a5.c48eb8",
        "type": "rpi-gpio out",
        "z": "db2290bc.6bd9c8",
        "g": "3b1baa9.ceb9956",
        "name": "Pump",
        "pin": "11",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "x": 530,
        "y": 320,
        "wires": []
    },
    {
        "id": "61547faa.cdd2",
        "type": "inject",
        "z": "db2290bc.6bd9c8",
        "g": "3b1baa9.ceb9956",
        "name": "Pump Off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 200,
        "y": 400,
        "wires": [
            [
                "13150dfd.eebf72"
            ]
        ]
    },
    {
        "id": "731e9eaf.6c074",
        "type": "exec",
        "z": "fd1f2b7f.0d4d08",
        "command": "python ~/NodeRed-BrewConfig/max31865.py",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 500,
        "y": 280,
        "wires": [
            [
                "eb826530.6339a8"
            ],
            [],
            []
        ]
    },
    {
        "id": "505ffd7b.e3b954",
        "type": "ui_text",
        "z": "fd1f2b7f.0d4d08",
        "group": "599c9f6f.d3c42",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "HLT",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1350,
        "y": 260,
        "wires": []
    },
    {
        "id": "eb826530.6339a8",
        "type": "json",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 770,
        "y": 280,
        "wires": [
            [
                "791d02be.92a92c",
                "41132951.92faa8",
                "be6919ba.1b34e8"
            ]
        ]
    },
    {
        "id": "6ee7ab4b.889ed4",
        "type": "ui_text",
        "z": "fd1f2b7f.0d4d08",
        "group": "599c9f6f.d3c42",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "MLT",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 990,
        "y": 500,
        "wires": []
    },
    {
        "id": "806a3c4.70fefc",
        "type": "ui_text",
        "z": "fd1f2b7f.0d4d08",
        "group": "599c9f6f.d3c42",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "BK",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 990,
        "y": 660,
        "wires": []
    },
    {
        "id": "791d02be.92a92c",
        "type": "function",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "func": "msg.payload = msg.payload.hlt\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 220,
        "wires": [
            [
                "505ffd7b.e3b954",
                "a1e9ea74.21cd98",
                "fb4d5c6f.c5572"
            ]
        ]
    },
    {
        "id": "be6919ba.1b34e8",
        "type": "function",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "func": "msg.payload = msg.payload.bk\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 740,
        "wires": [
            [
                "806a3c4.70fefc",
                "b49fa0f6.a819d"
            ]
        ]
    },
    {
        "id": "41132951.92faa8",
        "type": "function",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "func": "msg.payload = msg.payload.mlt\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 560,
        "wires": [
            [
                "6ee7ab4b.889ed4",
                "8705ef24.a14c1",
                "193fb580.1c22fb"
            ]
        ]
    },
    {
        "id": "abad5811.f3ed98",
        "type": "ui_chart",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "group": "599c9f6f.d3c42",
        "order": 3,
        "width": "8",
        "height": "6",
        "label": "hlt chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "25",
        "ymax": "55",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#d82c2c",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1720,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b49fa0f6.a819d",
        "type": "ui_chart",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "group": "c45a83a3.d00908",
        "order": 5,
        "width": "8",
        "height": "6",
        "label": "bk chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 890,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "8705ef24.a14c1",
        "type": "ui_chart",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "group": "c45a83a3.d00908",
        "order": 2,
        "width": "8",
        "height": "6",
        "label": "mlt chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 980,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "193fb580.1c22fb",
        "type": "smooth",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "10",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "3b9a6bbf.d9b344"
            ]
        ]
    },
    {
        "id": "3b9a6bbf.d9b344",
        "type": "ui_chart",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "group": "c45a83a3.d00908",
        "order": 4,
        "width": "8",
        "height": "6",
        "label": "MLT smooth",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1170,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "5f1ad99e.733a18",
        "type": "delay",
        "z": "bed2c066.9e4d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "af1445cd.189e48",
                "f0af4c6.8990cb"
            ]
        ]
    },
    {
        "id": "af1445cd.189e48",
        "type": "change",
        "z": "bed2c066.9e4d4",
        "name": "Buzz off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 80,
        "wires": [
            [
                "2d11f118.ffc45e"
            ]
        ]
    },
    {
        "id": "f0af4c6.8990cb",
        "type": "delay",
        "z": "bed2c066.9e4d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "de934177.ceffe",
                "77eba34d.6d105c"
            ]
        ]
    },
    {
        "id": "de934177.ceffe",
        "type": "change",
        "z": "bed2c066.9e4d4",
        "name": "Buzz on",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "2d11f118.ffc45e"
            ]
        ]
    },
    {
        "id": "77eba34d.6d105c",
        "type": "delay",
        "z": "bed2c066.9e4d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 550,
        "y": 160,
        "wires": [
            [
                "459b93da.80aeec"
            ]
        ]
    },
    {
        "id": "459b93da.80aeec",
        "type": "change",
        "z": "bed2c066.9e4d4",
        "name": "Buzz off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 160,
        "wires": [
            [
                "2d11f118.ffc45e"
            ]
        ]
    },
    {
        "id": "2d11f118.ffc45e",
        "type": "rpi-gpio out",
        "z": "bed2c066.9e4d4",
        "name": "Buzzer",
        "pin": "22",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "2db072c7.23309e",
        "type": "change",
        "z": "bed2c066.9e4d4",
        "name": "Buzz on",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 40,
        "wires": [
            [
                "2d11f118.ffc45e"
            ]
        ]
    },
    {
        "id": "4f4a658a.6b4aac",
        "type": "subflow:bed2c066.9e4d4",
        "z": "db2290bc.6bd9c8",
        "g": "3f74176e.8009c8",
        "name": "",
        "env": [],
        "x": 440,
        "y": 220,
        "wires": []
    },
    {
        "id": "6b95fe22.614ae",
        "type": "inject",
        "z": "db2290bc.6bd9c8",
        "g": "3f74176e.8009c8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "4f4a658a.6b4aac"
            ]
        ]
    },
    {
        "id": "13150dfd.eebf72",
        "type": "ui_switch",
        "z": "db2290bc.6bd9c8",
        "g": "3b1baa9.ceb9956",
        "name": "",
        "label": "Pump switch",
        "tooltip": "",
        "group": "ee877576.e7497",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 390,
        "y": 320,
        "wires": [
            [
                "87ee17a5.c48eb8"
            ]
        ]
    },
    {
        "id": "2c0ddb20.797604",
        "type": "ui_button",
        "z": "db2290bc.6bd9c8",
        "g": "3f74176e.8009c8",
        "name": "",
        "group": "ee877576.e7497",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Activate Buzzer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "4f4a658a.6b4aac"
            ]
        ]
    },
    {
        "id": "7fe4b5c3.32e58c",
        "type": "function",
        "z": "b4973237.46ab6",
        "name": "30 sec RC + 20",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 30*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue + 20;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 626.5,
        "y": 207,
        "wires": [
            [
                "ae1a6e5.d4c0d9"
            ]
        ]
    },
    {
        "id": "1bacd004.9753c",
        "type": "inject",
        "z": "b4973237.46ab6",
        "name": "Inject -0.2 at start",
        "props": [
            {
                "p": "payload",
                "v": "-0.2",
                "vt": "num"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "-0.2",
        "payloadType": "num",
        "x": 134.5,
        "y": 30,
        "wires": [
            [
                "ec719d4d.0d54f8"
            ]
        ]
    },
    {
        "id": "999a52c2.f465f",
        "type": "function",
        "z": "b4973237.46ab6",
        "name": "10 sec RC",
        "func": "// Applies a simple RC low pass filter to incoming payload values\nvar tc = 10*1000;       // time constant in milliseconds\n\nvar lastValue = context.get('lastValue');\nif (typeof lastValue == \"undefined\") lastValue = msg.payload;\nvar lastTime = context.get('lastTime') || null;\nvar now = new Date();\nvar currentValue = msg.payload;\nif (lastTime === null) {\n    // first time through\n    newValue = currentValue;\n} else {\n    var dt = now - lastTime;\n    var newValue;\n    \n    if (dt > 0) {\n        var dtotc = dt / tc;\n        newValue = lastValue * (1 - dtotc) + currentValue * dtotc;\n    } else {\n        // no time has elapsed leave output the same as last time\n        newValue = lastValue;\n    }\n}\ncontext.set('lastValue', newValue);\ncontext.set('lastTime', now);\n\nmsg.payload = newValue;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 451,
        "y": 207,
        "wires": [
            [
                "7fe4b5c3.32e58c"
            ]
        ]
    },
    {
        "id": "ec719d4d.0d54f8",
        "type": "delay",
        "z": "b4973237.46ab6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 268,
        "y": 104,
        "wires": [
            [
                "ede39236.1961f8"
            ]
        ]
    },
    {
        "id": "a823c9cf.2a6178",
        "type": "function",
        "z": "b4973237.46ab6",
        "name": "2 msg transport delay",
        "func": "// stores messages in a fifo until the specified number have been received, \n// then releases them as new messages are received.\n// during the filling phase the earliest message is passed on each time \n// a message is received, but it is also left in the fifo\nvar fifoMaxLength = 2;\nvar fifo = context.get('fifo') || [];\n// push the new message onto the top of the array, messages are shifted down and\n// drop off the front\nvar length = fifo.push(msg);  // returns new length\nif (length > fifoMaxLength) {\n    newMsg = fifo.shift();\n} else {\n    // not full yet, make a copy of the msg and pass it on\n    var newMsg = JSON.parse(JSON.stringify(fifo[0]));\n}\ncontext.set('fifo', fifo);\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 258,
        "y": 208,
        "wires": [
            [
                "999a52c2.f465f"
            ]
        ]
    },
    {
        "id": "ae1a6e5.d4c0d9",
        "type": "function",
        "z": "b4973237.46ab6",
        "name": "Clear all except payload",
        "func": "msg2 = {payload: msg.payload};\nreturn msg2;",
        "outputs": 1,
        "noerr": 0,
        "x": 545,
        "y": 293,
        "wires": [
            []
        ]
    },
    {
        "id": "ede39236.1961f8",
        "type": "range",
        "z": "b4973237.46ab6",
        "minin": "0",
        "maxin": "1",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": false,
        "name": "",
        "x": 87,
        "y": 208,
        "wires": [
            [
                "a823c9cf.2a6178"
            ]
        ]
    },
    {
        "id": "e0cb2a8c.4402a8",
        "type": "PID",
        "z": "a0771295.bec48",
        "name": "",
        "setpoint": "50",
        "pb": "0",
        "ti": "24",
        "td": "6",
        "integral_default": "0",
        "smooth_factor": "0",
        "max_interval": 600,
        "enable": "1",
        "disabled_op": "0",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "5ec4239b.34e174",
                "e94f888a.130a88"
            ]
        ]
    },
    {
        "id": "f70949c8.aab988",
        "type": "change",
        "z": "a0771295.bec48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "op",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 629.5,
        "y": 315,
        "wires": [
            [
                "9f58a52d.076dd"
            ]
        ]
    },
    {
        "id": "2792f805.066c78",
        "type": "inject",
        "z": "a0771295.bec48",
        "name": "Setpoint 30",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "setpoint",
        "payload": "30",
        "payloadType": "num",
        "x": 132,
        "y": 263,
        "wires": [
            [
                "e0cb2a8c.4402a8"
            ]
        ]
    },
    {
        "id": "1bf3ce16.c3ae02",
        "type": "inject",
        "z": "a0771295.bec48",
        "name": "Setpoint 80",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "setpoint",
        "payload": "80",
        "payloadType": "num",
        "x": 130.5,
        "y": 312,
        "wires": [
            [
                "e0cb2a8c.4402a8"
            ]
        ]
    },
    {
        "id": "f69bbf05.bdd49",
        "type": "inject",
        "z": "a0771295.bec48",
        "name": "enable",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "enable",
        "payload": "true",
        "payloadType": "bool",
        "x": 123,
        "y": 148,
        "wires": [
            [
                "e0cb2a8c.4402a8"
            ]
        ]
    },
    {
        "id": "143523b2.2f165c",
        "type": "inject",
        "z": "a0771295.bec48",
        "name": "disable",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "enable",
        "payload": "false",
        "payloadType": "bool",
        "x": 123.5,
        "y": 198,
        "wires": [
            [
                "e0cb2a8c.4402a8"
            ]
        ]
    },
    {
        "id": "5ec4239b.34e174",
        "type": "subflow:b4973237.46ab6",
        "z": "a0771295.bec48",
        "name": "",
        "env": [],
        "x": 393,
        "y": 167,
        "wires": [
            [
                "de738fc5.75e4c8",
                "e0cb2a8c.4402a8"
            ]
        ]
    },
    {
        "id": "de738fc5.75e4c8",
        "type": "change",
        "z": "a0771295.bec48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "pv",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 614,
        "y": 166,
        "wires": [
            [
                "9f58a52d.076dd"
            ]
        ]
    },
    {
        "id": "e94f888a.130a88",
        "type": "range",
        "z": "a0771295.bec48",
        "minin": "0",
        "maxin": "1",
        "minout": "0",
        "maxout": "25",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "Scale power",
        "x": 455,
        "y": 315,
        "wires": [
            [
                "f70949c8.aab988"
            ]
        ]
    },
    {
        "id": "9f58a52d.076dd",
        "type": "ui_chart",
        "z": "a0771295.bec48",
        "name": "",
        "group": "599c9f6f.d3c42",
        "order": 1,
        "width": "6",
        "height": "6",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#cf0005",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 819,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "bef0a1f8.2e2cf",
        "type": "inject",
        "z": "a0771295.bec48",
        "name": "Clear chart on deploy",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "{\"data\":[]}",
        "payloadType": "json",
        "x": 380,
        "y": 383,
        "wires": [
            [
                "9079ffaf.4a096"
            ]
        ]
    },
    {
        "id": "9079ffaf.4a096",
        "type": "change",
        "z": "a0771295.bec48",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 616,
        "y": 383,
        "wires": [
            [
                "9f58a52d.076dd"
            ]
        ]
    },
    {
        "id": "978ce145.42976",
        "type": "rpi-gpio out",
        "z": "b6bdc7e8.c2bbe8",
        "name": "HLT Element out",
        "pin": "37",
        "set": false,
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 550,
        "y": 120,
        "wires": []
    },
    {
        "id": "7821cacc.968c44",
        "type": "link in",
        "z": "b6bdc7e8.c2bbe8",
        "name": "HLT Element",
        "links": [
            "8ab36a9e.8da5c8",
            "359e5b33.af2754",
            "9d19b417.2ff2c8",
            "bfadb1f1.cadec"
        ],
        "x": 130,
        "y": 120,
        "wires": [
            [
                "978ce145.42976",
                "ee085d83.81d5c"
            ]
        ],
        "l": true
    },
    {
        "id": "a1e9ea74.21cd98",
        "type": "change",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "temp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 300,
        "wires": [
            [
                "abad5811.f3ed98"
            ]
        ]
    },
    {
        "id": "8c0e6674.9c4a98",
        "type": "link out",
        "z": "b6bdc7e8.c2bbe8",
        "name": "HLT Element output power",
        "links": [
            "2d59e69.056b31a"
        ],
        "x": 680,
        "y": 260,
        "wires": [],
        "l": true
    },
    {
        "id": "c6e49801.1e9418",
        "type": "change",
        "z": "fd1f2b7f.0d4d08",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "power",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 340,
        "wires": [
            [
                "41729e5b.1f208"
            ]
        ]
    },
    {
        "id": "2d59e69.056b31a",
        "type": "link in",
        "z": "fd1f2b7f.0d4d08",
        "name": "HLT Element output power",
        "links": [
            "8c0e6674.9c4a98"
        ],
        "x": 1050,
        "y": 340,
        "wires": [
            [
                "c6e49801.1e9418"
            ]
        ],
        "l": true
    },
    {
        "id": "41729e5b.1f208",
        "type": "range",
        "z": "fd1f2b7f.0d4d08",
        "minin": "0",
        "maxin": "100",
        "minout": "30",
        "maxout": "50",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1470,
        "y": 340,
        "wires": [
            [
                "abad5811.f3ed98"
            ]
        ]
    },
    {
        "id": "f36ed21c.b27c3",
        "type": "inject",
        "z": "4c0008aa.866518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "d583a0c6.8c20b"
            ]
        ]
    },
    {
        "id": "d583a0c6.8c20b",
        "type": "link out",
        "z": "4c0008aa.866518",
        "name": "Heatbeat ticker 1s",
        "links": [
            "d10d7337.68526",
            "a566f02f.63e1c"
        ],
        "x": 460,
        "y": 160,
        "wires": [],
        "l": true
    },
    {
        "id": "d10d7337.68526",
        "type": "link in",
        "z": "fd1f2b7f.0d4d08",
        "name": "Heatbeat ticker",
        "links": [
            "d583a0c6.8c20b"
        ],
        "x": 200,
        "y": 280,
        "wires": [
            [
                "731e9eaf.6c074"
            ]
        ],
        "l": true
    },
    {
        "id": "ee085d83.81d5c",
        "type": "change",
        "z": "b6bdc7e8.c2bbe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hltPower",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a566f02f.63e1c",
        "type": "link in",
        "z": "b6bdc7e8.c2bbe8",
        "name": "Heatbeat ticker 1s",
        "links": [
            "d583a0c6.8c20b"
        ],
        "x": 150,
        "y": 260,
        "wires": [
            [
                "ee91dc6f.629ae"
            ]
        ],
        "l": true
    },
    {
        "id": "ee91dc6f.629ae",
        "type": "change",
        "z": "b6bdc7e8.c2bbe8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "hltPower",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 260,
        "wires": [
            [
                "8c0e6674.9c4a98"
            ]
        ]
    },
    {
        "id": "e4dea1a5.4f1ed",
        "type": "PID",
        "z": "4c2748b.984d3b8",
        "name": "HLT PID",
        "setpoint": "10",
        "pb": "0",
        "ti": 9999,
        "td": 0,
        "integral_default": 0.5,
        "smooth_factor": 3,
        "max_interval": 600,
        "enable": 1,
        "disabled_op": 0,
        "x": 480,
        "y": 120,
        "wires": [
            [
                "1997fac1.880f65"
            ]
        ]
    },
    {
        "id": "9d19b417.2ff2c8",
        "type": "link out",
        "z": "4c2748b.984d3b8",
        "name": "HLT Element",
        "links": [
            "cee9183c.900198",
            "7821cacc.968c44"
        ],
        "x": 870,
        "y": 100,
        "wires": [],
        "l": true
    },
    {
        "id": "1997fac1.880f65",
        "type": "range",
        "z": "4c2748b.984d3b8",
        "minin": "0",
        "maxin": "1",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 680,
        "y": 100,
        "wires": [
            [
                "9d19b417.2ff2c8"
            ]
        ]
    },
    {
        "id": "fb4d5c6f.c5572",
        "type": "link out",
        "z": "fd1f2b7f.0d4d08",
        "name": "HLT Temperature",
        "links": [
            "fd495fdd.1b2f3",
            "11d53e33.30f432"
        ],
        "x": 1220,
        "y": 160,
        "wires": [],
        "l": true
    },
    {
        "id": "fd495fdd.1b2f3",
        "type": "link in",
        "z": "4c2748b.984d3b8",
        "name": "HLT Temerature",
        "links": [
            "fb4d5c6f.c5572"
        ],
        "x": 160,
        "y": 120,
        "wires": [
            [
                "e4dea1a5.4f1ed"
            ]
        ],
        "l": true
    },
    {
        "id": "d7e3e564.f78cc8",
        "type": "link in",
        "z": "4c2748b.984d3b8",
        "name": "HLT Target Temperature",
        "links": [
            "562f39c5.a3f158",
            "ed8921b.65038e"
        ],
        "x": 180,
        "y": 220,
        "wires": [
            [
                "5f982b96.87a964"
            ]
        ],
        "l": true
    },
    {
        "id": "5f982b96.87a964",
        "type": "change",
        "z": "4c2748b.984d3b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "setpoint",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 220,
        "wires": [
            [
                "e4dea1a5.4f1ed",
                "aee6984a.086ea8"
            ]
        ]
    },
    {
        "id": "aee6984a.086ea8",
        "type": "link out",
        "z": "4c2748b.984d3b8",
        "name": "HLT Target temp reading",
        "links": [
            "960d8634.9aaaf8",
            "88dcb199.734bb"
        ],
        "x": 615,
        "y": 220,
        "wires": []
    },
    {
        "id": "b9bd7279.f5059",
        "type": "ui_switch",
        "z": "72bd38cd.b8a178",
        "name": "",
        "label": "HLT element switch",
        "tooltip": "",
        "group": "ee877576.e7497",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "100",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "bfadb1f1.cadec"
            ]
        ]
    },
    {
        "id": "5417cd81.607584",
        "type": "inject",
        "z": "72bd38cd.b8a178",
        "name": "HLT Element On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "b9bd7279.f5059"
            ]
        ]
    },
    {
        "id": "137f19fe.982266",
        "type": "inject",
        "z": "72bd38cd.b8a178",
        "name": "HLT Element Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "b9bd7279.f5059"
            ]
        ]
    },
    {
        "id": "bfadb1f1.cadec",
        "type": "link out",
        "z": "72bd38cd.b8a178",
        "name": "HLT Element",
        "links": [
            "7821cacc.968c44"
        ],
        "x": 670,
        "y": 120,
        "wires": [],
        "l": true
    },
    {
        "id": "bc4ccc21.8018",
        "type": "ui_slider",
        "z": "72bd38cd.b8a178",
        "name": "HLT Target temp",
        "label": "HLT Target temp slider",
        "tooltip": "",
        "group": "ee877576.e7497",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "min": "40",
        "max": "105",
        "step": 1,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "ed8921b.65038e"
            ]
        ]
    },
    {
        "id": "ed8921b.65038e",
        "type": "link out",
        "z": "72bd38cd.b8a178",
        "name": "HLT Target Temp",
        "links": [
            "d7e3e564.f78cc8"
        ],
        "x": 690,
        "y": 240,
        "wires": [],
        "l": true
    },
    {
        "id": "4a7a15f2.91aaec",
        "type": "ui_text",
        "z": "72bd38cd.b8a178",
        "group": "ee877576.e7497",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "HLT Target temp",
        "label": "HLT Target temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 680,
        "y": 280,
        "wires": []
    },
    {
        "id": "88dcb199.734bb",
        "type": "link in",
        "z": "72bd38cd.b8a178",
        "name": "",
        "links": [
            "aee6984a.086ea8"
        ],
        "x": 485,
        "y": 280,
        "wires": [
            [
                "4a7a15f2.91aaec"
            ]
        ]
    },
    {
        "id": "4ff1813c.e0d99",
        "type": "ui_gauge",
        "z": "72bd38cd.b8a178",
        "name": "",
        "group": "ee877576.e7497",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "HLT Temp",
        "label": "°C",
        "format": "{{value}}",
        "min": "20",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "80",
        "x": 520,
        "y": 460,
        "wires": []
    },
    {
        "id": "11d53e33.30f432",
        "type": "link in",
        "z": "72bd38cd.b8a178",
        "name": "HLT Temerature",
        "links": [
            "fb4d5c6f.c5572"
        ],
        "x": 280,
        "y": 460,
        "wires": [
            [
                "4ff1813c.e0d99"
            ]
        ],
        "l": true
    }
]